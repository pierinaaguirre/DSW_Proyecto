//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoVenta.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductosOrganicosEntities : DbContext
    {
        public ProductosOrganicosEntities()
            : base("name=ProductosOrganicosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Pai> Pais { get; set; }
        public virtual DbSet<PedidosCabe> PedidosCabes { get; set; }
        public virtual DbSet<PedidosDeta> PedidosDetas { get; set; }
        public virtual DbSet<Producto> Productoes { get; set; }
        public virtual DbSet<Proveedor> Proveedors { get; set; }
        public virtual DbSet<Rol> Rols { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
    
        public virtual ObjectResult<usp_Categoria_Listar_Result> usp_Categoria_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Categoria_Listar_Result>("usp_Categoria_Listar");
        }
    
        public virtual ObjectResult<usp_Cliente_Datos_Result> usp_Cliente_Datos(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cliente_Datos_Result>("usp_Cliente_Datos", idClienteParameter);
        }
    
        public virtual int usp_Cliente_Eliminar(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Cliente_Eliminar", idClienteParameter);
        }
    
        public virtual int usp_Cliente_Insertar(string nombreCliente, string apellidoCliente, string dirCliente, string distrito, string telefonoCliente, string correo, string contraseña)
        {
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("nombreCliente", nombreCliente) :
                new ObjectParameter("nombreCliente", typeof(string));
    
            var apellidoClienteParameter = apellidoCliente != null ?
                new ObjectParameter("apellidoCliente", apellidoCliente) :
                new ObjectParameter("apellidoCliente", typeof(string));
    
            var dirClienteParameter = dirCliente != null ?
                new ObjectParameter("dirCliente", dirCliente) :
                new ObjectParameter("dirCliente", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("distrito", distrito) :
                new ObjectParameter("distrito", typeof(string));
    
            var telefonoClienteParameter = telefonoCliente != null ?
                new ObjectParameter("telefonoCliente", telefonoCliente) :
                new ObjectParameter("telefonoCliente", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Cliente_Insertar", nombreClienteParameter, apellidoClienteParameter, dirClienteParameter, distritoParameter, telefonoClienteParameter, correoParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<usp_Cliente_Listar_Result> usp_Cliente_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cliente_Listar_Result>("usp_Cliente_Listar");
        }
    
        public virtual int usp_Cliente_Update(Nullable<int> idCliente, string nombreCliente, string apellidoCliente, string dirCliente, string distrito, string telefonoCliente, string correo, string contraseña)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("nombreCliente", nombreCliente) :
                new ObjectParameter("nombreCliente", typeof(string));
    
            var apellidoClienteParameter = apellidoCliente != null ?
                new ObjectParameter("apellidoCliente", apellidoCliente) :
                new ObjectParameter("apellidoCliente", typeof(string));
    
            var dirClienteParameter = dirCliente != null ?
                new ObjectParameter("dirCliente", dirCliente) :
                new ObjectParameter("dirCliente", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("distrito", distrito) :
                new ObjectParameter("distrito", typeof(string));
    
            var telefonoClienteParameter = telefonoCliente != null ?
                new ObjectParameter("telefonoCliente", telefonoCliente) :
                new ObjectParameter("telefonoCliente", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Cliente_Update", idClienteParameter, nombreClienteParameter, apellidoClienteParameter, dirClienteParameter, distritoParameter, telefonoClienteParameter, correoParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<usp_Pais_Listar_Result> usp_Pais_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Pais_Listar_Result>("usp_Pais_Listar");
        }
    
        public virtual int usp_Producto_Actualizar(Nullable<int> idProducto, string nombreProducto, string descripcion, Nullable<int> idcategoria, Nullable<decimal> precioUnidad, Nullable<int> stock, Nullable<int> idproveedor)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("nombreProducto", nombreProducto) :
                new ObjectParameter("nombreProducto", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("idcategoria", idcategoria) :
                new ObjectParameter("idcategoria", typeof(int));
    
            var precioUnidadParameter = precioUnidad.HasValue ?
                new ObjectParameter("precioUnidad", precioUnidad) :
                new ObjectParameter("precioUnidad", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var idproveedorParameter = idproveedor.HasValue ?
                new ObjectParameter("idproveedor", idproveedor) :
                new ObjectParameter("idproveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Producto_Actualizar", idProductoParameter, nombreProductoParameter, descripcionParameter, idcategoriaParameter, precioUnidadParameter, stockParameter, idproveedorParameter);
        }
    
        public virtual ObjectResult<usp_Producto_Datos_Result> usp_Producto_Datos(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Producto_Datos_Result>("usp_Producto_Datos", idProductoParameter);
        }
    
        public virtual int usp_Producto_Eliminar(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Producto_Eliminar", idProductoParameter);
        }
    
        public virtual int usp_Producto_Insertar(string nombreProducto, string descripcion, Nullable<int> idcategoria, Nullable<decimal> precioUnidad, Nullable<int> stock, Nullable<int> idproveedor)
        {
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("nombreProducto", nombreProducto) :
                new ObjectParameter("nombreProducto", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("idcategoria", idcategoria) :
                new ObjectParameter("idcategoria", typeof(int));
    
            var precioUnidadParameter = precioUnidad.HasValue ?
                new ObjectParameter("precioUnidad", precioUnidad) :
                new ObjectParameter("precioUnidad", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var idproveedorParameter = idproveedor.HasValue ?
                new ObjectParameter("idproveedor", idproveedor) :
                new ObjectParameter("idproveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Producto_Insertar", nombreProductoParameter, descripcionParameter, idcategoriaParameter, precioUnidadParameter, stockParameter, idproveedorParameter);
        }
    
        public virtual ObjectResult<usp_Producto_Listar_Result> usp_Producto_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Producto_Listar_Result>("usp_Producto_Listar");
        }
    
        public virtual ObjectResult<usp_Proveedor_Listar_Result> usp_Proveedor_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Proveedor_Listar_Result>("usp_Proveedor_Listar");
        }
    
        public virtual ObjectResult<usp_Rol_Listar_Result> usp_Rol_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Rol_Listar_Result>("usp_Rol_Listar");
        }
    
        public virtual int usp_Usuario_Actualizar(Nullable<int> idUsuario, string nombre, string apellido, string telefono, string direccion, Nullable<int> dni, Nullable<int> idrol, string correo, string contraseña)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(int));
    
            var idrolParameter = idrol.HasValue ?
                new ObjectParameter("idrol", idrol) :
                new ObjectParameter("idrol", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Usuario_Actualizar", idUsuarioParameter, nombreParameter, apellidoParameter, telefonoParameter, direccionParameter, dniParameter, idrolParameter, correoParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<usp_Usuario_Datos_Result> usp_Usuario_Datos(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Usuario_Datos_Result>("usp_Usuario_Datos", idUsuarioParameter);
        }
    
        public virtual int usp_Usuario_Eliminar(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Usuario_Eliminar", idUsuarioParameter);
        }
    
        public virtual int usp_Usuario_Insertar(string nombre, string apellido, string telefono, string direccion, Nullable<int> dni, Nullable<int> idrol, string correo, string contraseña)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var dniParameter = dni.HasValue ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(int));
    
            var idrolParameter = idrol.HasValue ?
                new ObjectParameter("idrol", idrol) :
                new ObjectParameter("idrol", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Usuario_Insertar", nombreParameter, apellidoParameter, telefonoParameter, direccionParameter, dniParameter, idrolParameter, correoParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<usp_Usuario_Listar_Result> usp_Usuario_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Usuario_Listar_Result>("usp_Usuario_Listar");
        }
    }
}
